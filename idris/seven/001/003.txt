[i847419:~/Documents … dris/seven/001] master* ± idris
     ____    __     _                                          
    /  _/___/ /____(_)____                                     
    / // __  / ___/ / ___/     Version 1.3.0
  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/      
 /___/\__,_/_/  /_/____/       Type :? for help               

Idris is free software with ABSOLUTELY NO WARRANTY.            
For details type :warranty.
Idris> :l data_types.idr 
Type checking ./data_types.idr
*data_types> Naught
Naught : DumbNumber
*data_types> Two
Two : DumbNumber
*data_types> 
Bye bye
[i847419:~/Documents … dris/seven/001] master* 1m41s ± git pull
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/billwestfall/miscellaneous
   e0fe71a..aad5fd9  master     -> origin/master
Updating e0fe71a..aad5fd9
Fast-forward
 idris/seven/001/data_types.idr | 1 +
 1 file changed, 1 insertion(+)
[i847419:~/Documents … dris/seven/001] master* ± idris
     ____    __     _                                          
    /  _/___/ /____(_)____                                     
    / // __  / ___/ / ___/     Version 1.3.0
  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/      
 /___/\__,_/_/  /_/____/       Type :? for help               

Idris is free software with ABSOLUTELY NO WARRANTY.            
For details type :warranty.
Idris> :l data_types.i
data_types.ibc  data_types.idr
Idris> :l data_types.idr 
Type checking ./data_types.idr
*data_types> Zero
Zero : Natural
*data_types> After Zero
After Zero : Natural
*data_types> Natural
Natural : Type
*data_types> After{After Zero)
(input):1:13:
  |
1 | After{After Zero)
  |             ^
unexpected 'Z'
expecting '=' or '}'

*data_types> :t Z
Z : Nat
*data_types> :t S Z
1 : Nat
*data_types> :t S (S Z)
2 : Nat
*data_types> 
Bye bye
[i847419:~/Documents … dris/seven/001] master* 2m16s ± 
[i847419:~/Documents … dris/seven/001] master* ± 
[i847419:~/Documents … dris/seven/001] master* ± git pull
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/billwestfall/miscellaneous
   aad5fd9..16aedbc  master     -> origin/master
Updating aad5fd9..16aedbc
Fast-forward
 idris/seven/001/data_types.idr | 1 +
 1 file changed, 1 insertion(+)
[i847419:~/Documents … dris/seven/001] master* ± idris
     ____    __     _                                          
    /  _/___/ /____(_)____                                     
    / // __  / ___/ / ___/     Version 1.3.0
  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/      
 /___/\__,_/_/  /_/____/       Type :? for help               

Idris is free software with ABSOLUTELY NO WARRANTY.            
For details type :warranty.
Idris> :l data_types.idr 
Type checking ./data_types.idr
*data_types> (::) "Watson" Blank
"Watson" :: Blank : MyList String
*data_types> "Watson"::Blank
"Watson" :: Blank : MyList String
*data_types> 
Bye bye
[i847419:~/Documents … dris/seven/001] master* 2m29s ± git pull
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/billwestfall/miscellaneous
   16aedbc..1157c65  master     -> origin/master
Updating 16aedbc..1157c65
Fast-forward
 idris/seven/001/data_types.idr | 4 ++++
 1 file changed, 4 insertions(+)
[i847419:~/Documents … dris/seven/001] master* ± idris
     ____    __     _                                          
    /  _/___/ /____(_)____                                     
    / // __  / ___/ / ___/     Version 1.3.0
  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/      
 /___/\__,_/_/  /_/____/       Type :? for help               

Idris is free software with ABSOLUTELY NO WARRANTY.            
For details type :warranty.
Idris> :l data_types.idr 
Type checking ./data_types.idr
*data_types> first("Elementary"::Blank)
Just "Elementary" : Maybe String
*data_types> first(the(MyList String)Blank)
Nothing : Maybe String
*data_types> 
